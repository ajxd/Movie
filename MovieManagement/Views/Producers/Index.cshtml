@model IEnumerable<Producer>

@{
    ViewData["Title"] = "List of Producers";
}

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .container {
        padding: 2rem;
        display: flex;
        justify-content: center;
    }

    .table-container {
        overflow: hidden;
        border-radius: 12px;
        box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    }

    table {
        width: 100%;
        border-collapse: collapse;
        transition: all 0.3s ease;
    }

    thead {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
    }

    th, td {
        padding: 0.75rem;
        text-align: center;
    }

    th {
        position: sticky;
        top: 0;
        z-index: 10;
    }

    tbody tr:nth-child(odd) {
        background-color: #f9f9f9;
    }

    tbody tr:nth-child(even) {
        background-color: #e9e9e9;
    }

    img.profile-pic {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
    }

    .action-buttons a {
        margin: 0 5px;
        display: inline-block;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        transition: all 0.3s ease;
        color: #fff;
    }

    .edit-btn {
        background-color: #f0ad4e;
    }

    .details-btn {
        background-color: #5bc0de;
    }

    .delete-btn {
        background-color: #d9534f;
    }

    .action-buttons a:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .btn-outline-secondary {
        background-color: #6c757d;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        text-decoration: none;
    }

        .btn-outline-secondary:hover {
            background-color: #5a6268;
        }
</style>

<div class="container">
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ProfilePictureURL)</th>
                    <th>@Html.DisplayNameFor(model => model.FullName)</th>
                    <th>@Html.DisplayNameFor(model => model.Bio)</th>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <th>Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <img class="profile-pic" src="@item.ProfilePictureURL" alt="@item.FullName">
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Bio)</td>
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            <td class="action-buttons">
                                <a class="edit-btn" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i> Edit</a>
                                <a class="details-btn" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"></i> Details</a>
                                <a class="delete-btn" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i> Delete</a>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@await Html.PartialAsync("_CreateItem", "Producers")
