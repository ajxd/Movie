@using MovieManagement.Data.ViewModels;
@model ShoppingCartVM

@{
    ViewData["Title"] = "Shopping Cart Summary";
}

<style>
    .cart-container {
        padding: 20px;
        margin-top: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .cart-header {
        background-color: #007bff;
        color: white;
        padding: 15px;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
        font-size: 20px;
    }

    .cart-table th {
        background-color: #f8f9fa;
    }

    .btn-custom {
        padding: 8px 16px;
        border-radius: 20px;
        transition: all 0.3s;
    }

    .btn-custom-outline {
        border: 2px solid;
    }

    .btn-primary-outline {
        border-color: #007bff;
        color: #007bff;
    }

        .btn-primary-outline:hover {
            background-color: #007bff;
            color: white;
        }

    .btn-success-outline {
        border-color: #28a745;
        color: #28a745;
    }

        .btn-success-outline:hover {
            background-color: #28a745;
            color: white;
        }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-10 offset-md-1 cart-container">
            <div class="cart-header text-center">
                <h2>Your Shopping Cart Summary</h2>
            </div>
            <table class="table cart-table">
                <thead>
                    <tr>
                        <th>Quantity</th>
                        <th>Movie</th>
                        <th>Price</th>
                        <th>Subtotal</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
                    {
                        <tr>
                            <td>@item.Amount</td>
                            <td>@item.Movie.Name</td>
                            <td>@item.Movie.Price.ToString("c")</td>
                            <td>@((item.Amount * item.Movie.Price).ToString("c"))</td>
                            <td>
                                <a class="btn btn-custom btn-primary-outline" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart"
                                   asp-route-id="@item.Movie.Id">
                                    <i class="bi bi-dash-circle"></i> Remove
                                </a>
                                <a class="btn btn-custom btn-success-outline" asp-controller="Orders" asp-action="AddItemToShoppingCart"
                                   asp-route-id="@item.Movie.Id">
                                    <i class="bi bi-plus-circle"></i> Add
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-right"><strong>Total:</strong></td>
                        <td colspan="2">@Model.ShoppingCartTotal.ToString("c")</td>
                    </tr>
                </tfoot>
            </table>
            <div class="text-right">
                <div id="paypal-btn"></div>
                <a class="btn btn-custom btn-success-outline" asp-controller="Movies" asp-action="Index">
                    <i class="bi bi-cart-plus"></i> Continue Shopping
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://www.paypalobjects.com/api/checkout.js"></script>
    <script>
        let _total = @Html.Raw(Model.ShoppingCartTotal);

        paypal.Button.render({
            env: 'sandbox',
            client: {
                sandbox: 'AcKRtgL4i68EZ2ZYuYUx3ilihAg2YhL5dtF_m19A8MjBWVOn6ewNS4M_uV8gA3xi98zTcUq38gUHbVFx'
            },
            locale: 'en_US',
            style: {
                size: 'small',
                color: 'gold',
                shape: 'pill'
            },
            commit: true,
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: _total,
                            currency: 'USD'
                        }
                    }]
                });
            },
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    window.location.href = '@Url.Action("CompleteOrder", "Orders")';
                });
            }
        }, '#paypal-btn');
    </script>
}
